services:
  apache:
    #image: apache-demo-image:latest
    container_name: apache-demo-container
    build:
        context: ./apache
        args:
            - NODE_ENV=local
        dockerfile: Dockerfile
    environment: # Define an environment variable
      - HOST_IP=192.168.0.22
      - BACKEND_API=192.168.0.22
      - BACKEND_PORT=5000
    ports:  # Expose host port: container port
      - "8080:80"
    network_mode: bridge
    depends_on:
      - mysql
  python:
    #image: python-demo-image:latest
    container_name: python-demo-container
    # deploy:
    #   mode: replicated
    #   replicas: 3
    build:
        context: ./python
        args:
            - NODE_ENV=local
        dockerfile: Dockerfile
    environment: # Define an environment variable
      - dbTable=users_feedback
      - dbHost=192.168.0.22
      - dbName=demo_mysql
      - dbUser=mysql-admin
      - dbPass=mysql-password
    ports:  # Expose host port: container port
      - "5000:5000"
    # ports:  # Expose range of host port: container port
    #   - "5001-5003:5000"
    network_mode: bridge
    depends_on:
      - mysql
  # nginx:
  #   container_name: nginx-lb-container
  #   build:
  #       context: ./nginx
  #       args:
  #           - NODE_ENV=local
  #       dockerfile: Dockerfile
  #   ports:  # Expose host port: container port
  #     - "5000:5000"
  #   network_mode: bridge
  mysql:
    #image: mysql:8.0
    container_name: mysql_db
    build:
        context: ./mysql
        args:
            - NODE_ENV=local
        dockerfile: Dockerfile
    ports:
      - "3306:3306"
    # volumes:
    #   - ./mysql/data:/var/lib/mysql
    network_mode: bridge